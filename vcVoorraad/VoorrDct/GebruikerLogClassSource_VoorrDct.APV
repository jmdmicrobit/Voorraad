[MODULE]
NAME 'GebruikerLogClassSource_VoorrDct.clw'
[COMMON]
FROM ABC GENERATED
[PROCEDURE]
NAME GebruikerLogClassSource
NOEXPORT
[COMMON]
FROM MTMaxtel MT_ClassC7_Declaration
[PROMPTS]
%MTClassName DEFAULT  ('GebruikerLogClass')
%MTDefIncFileName DEFAULT  ('GebruikerLogClassDef.inc')
%MTSrcIncFileName DEFAULT  ('GebruikerLogClassSrc.inc')
%MTHandcode LONG  (0)
%MTNotType LONG  (1)
[EMBED]
EMBED %ClassDeclaration
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2001
PROPERTY:END
Log PROCEDURE(STRING PRM:Handeling, STRING PRM:Tabel, STRING PRM:RecordInhoudPre, <STRING PRM:RecordInhoudPost>)
BepaalRecordContent PROCEDURE(*GROUP RecordContent), STRING
CleanString PROCEDURE(STRING PRM:String), STRING
[END]
EMBED %ClassSource
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3600
PROPERTY:END
GebruikerLogClass.Log       PROCEDURE(STRING PRM:Handeling, STRING PRM:Tabel, STRING PRM:RecordInhoudPre, <STRING PRM:RecordInhoudPost>)
CODE
    !db.Debugout('Voor Access:GebruikerLog.Open()')
	Access:GebruikerLog.Open()
    !db.Debugout('Na Access:GebruikerLog.Open()')
	
	CLEAR(LOG:Record)
	Log:WindowsInlog = IGB:WindowsInlog
	Log:Uitgevoerd_DATE = TODAY()
	Log:Uitgevoerd_TIME = CLOCK()
    Log:Handeling = PRM:Handeling
    IF CLIP(GLO:GebruikerLogHandelingOpmerking)=''
        Log:HandelingOpmerking = GlobalErrors.GetProcedureName()
    ELSE
        Log:HandelingOpmerking = GLO:GebruikerLogHandelingOpmerking
    END
	Log:Tabel = PRM:Tabel
	Log:RecordInhoudPre = PRM:RecordInhoudPre
	IF NOT(OMITTED(5))
		Log:RecordInhoudPost = PRM:RecordInhoudPost
	END
	
    !db.Debugout('Voor Access:GebruikerLog.Insert()')
	Access:GebruikerLog.Insert()
    !db.Debugout('Na Access:GebruikerLog.Insert()')
	Access:GebruikerLog.Close()
    !db.Debugout('Na Access:GebruikerLog.Close()')
	
	GLO:GebruikerLogHandelingOpmerking = ''
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
GebruikerLogClass.BepaalRecordContent  PROCEDURE(*GROUP RecordContent)
TempAny                                     ANY
FieldName                                   STRING(100)
CountFields                                 LONG
ReturnString                                STRING(5000)
Eerste										BYTE
CODE
	LOOP i# = 1000 TO 1 BY -1
		IF CLIP(WHO(RecordContent, i#)) <> '' THEN
			CountFields = i#
			BREAK
		END
	END
	
	Eerste = true
	
	LOOP i# = 1 TO CountFields
		FieldName = WHO(RecordContent, i#)
		TempAny &= WHAT(RecordContent, i#)
		
		IF Eerste THEN
			ReturnString = ''
			Eerste = false
		ELSE
			ReturnString = CLIP(ReturnString) & CHR(13) & CHR(10)
		END
		
		IF LEN(TempAny) > 0 THEN
			ReturnString = CLIP(ReturnString) & CLIP(FieldName) & '=' & SELF.CleanString(TempAny) &|
				'            , ' & FORMAT(SELF.CleanString(TempAny), @d6-) &|
				'            , ' & FORMAT(SELF.CleanString(TempAny), @t1) &|
				'            , ' & (VAL(SUB(TempAny, 1, 1)) - 48)
		ELSE
			ReturnString = CLIP(ReturnString) & CLIP(FieldName) & '=' & SELF.CleanString(TempAny) &|
				'            , ' & FORMAT(SELF.CleanString(TempAny), @d6-) &|
				'            , ' & FORMAT(SELF.CleanString(TempAny), @t1)
		END
	END
	
	RETURN CLIP(ReturnString)
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
GebruikerLogClass.CleanString       PROCEDURE(STRING PRM:String)
ReturnString                            STRING(5000)
SubString								STRING(1)
CODE
	IF LEN(PRM:String) > 1 THEN
		LOOP i# = 1 TO LEN(PRM:String)
			SubString = SUB(PRM:String,i#,1)
			IF (SubString <> CHR(10) AND SubString <> CHR(13) AND SubString <> CHR(7) AND SubString <> CHR(0))
				ReturnString = CLIP(ReturnString) & SubString
			END
		END
	
		RETURN CLIP(ReturnString)
	ELSE
		RETURN ''
	END
[END]
[END]
[ADDITION]
NAME NetTalk Local_Use_NetRefresh
[INSTANCE]
INSTANCE 2
OWNER 3
[PROMPTS]
%NoNetRefreshHere LONG  (0)
%NetRefreshFrame LONG  (0)
%SendRefreshAtOK DEFAULT  ('Use Global Default')
%RefreshAnyway LONG  (0)
%DependOnAll LONG  (1)
%DependFiles MULTI LONG  ()
%DependFile DEPEND %DependFiles FILE TIMES 0

%DependFileHC DEPEND %DependFiles DEFAULT TIMES 0

%SendRefreshPrimary LONG  (1)
%RefreshFiles MULTI LONG  ()
%RefreshFile DEPEND %RefreshFiles FILE TIMES 0

[ADDITION]
NAME WinEvent WinEvent
[INSTANCE]
INSTANCE 1
OWNER 1
[PROMPTS]
%DisableWinEvent LONG  (0)
%AutoDown LONG  (0)
%NoAutoDown LONG  (0)
%LocWindowsVisible DEFAULT  ('0')
%EnableWheelMouse LONG  (0)
%AlertWinEventDebug LONG  (0)
%DisplayCompileDate LONG  (0)
%DisplayCompileDateFormat DEFAULT  ('@D6')
%WinAlert MULTI LONG  ()
%Mess DEPEND %WinAlert DEFAULT TIMES 0

%Act1 DEPEND %WinAlert DEFAULT TIMES 0

%act2 DEPEND %WinAlert DEFAULT TIMES 0

%SortListbox MULTI LONG  ()
%ThisListbox DEPEND %SortListbox DEFAULT TIMES 0

%ThisListboxHeader DEPEND %SortListbox MULTI DEFAULT TIMES 0

%gloWinEventTesting LONG  (0)
%gloWinEventTestingColor1 LONG  (15728618)
%gloWinEventTestingColor2 LONG  (16777215)
%WindowsVisibleAfterOpen LONG  (1)
%CheckForCantCloseNowSetHere LONG  (1)
%locNoHandleCloseDown LONG  (0)
%locCloseDownWhenWindowCloses LONG  (0)
%locCloseDownWhenWindowClosesSet LONG  (0)
%locCloseDownWhenWindowClosesCtrl DEFAULT  ('')
[END]
