[MODULE]
NAME 'ExportInvoiceXML_VoorrDct.clw'
[COMMON]
FROM ABC GENERATED
[PROCEDURE]
NAME ExportInvoiceXML
PROTOTYPE '(<<VER:Record>, <<INK:Record>, String layout)'
PARAMETERS '(<<VER:Record __p1>,<<INK:Record __p2>,String __layout)'
[COMMON]
FROM ABC Source
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %LocalProcedures
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ExportClass.XMLHeader       PROCEDURE()

CurrenTag                       CString(20)
CODE
    IF CurrentLayout=LayOut:Invoice
        CurrenTag = 'Invoices'
    ELSE
        CurrenTag = 'Orders'
    END

    if not bestaandbestand
        st.SetValue('<?xml version="1.0" ?>')
        st.Append('<eExact xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="eExact-Schema.xsd">')
        st.Append('<'&CurrenTag&'>')
    END
    ExportClass.XMLOrder()
    st.Append('</'&CurrenTag&'>')
    st.Append('</eExact>')

    RETURN

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ExportClass.XMLOrder        PROCEDURE()

OrderLine                       LONG
LayoutTag                       CString(20)
CODE
    IF CurrentLayout=LayOut:Invoice
        st.Append('<Invoice type="V" code="10">')
        st.Append('<Order type="V" number="'&Ver2:VerkoopID&'"/>')
    ELSIF CurrentLayout=LayOut:PurchaseOrder
        st.Append('<Order type="B" number="'&Ink:InkoopID&'" >')
    ELSE
        st.Append('<Order type="V" number="" partialdelivery="1" confirm="0" invoicemethod="F">')
    END
    st.Append('<Description>'&Ver2:VerkoopID&'</Description>')
    IF CurrentLayout=LayOut:PurchaseOrder
        st.Append('<OurRef>Verkoop: '&Ink:InkoopID&'</OurRef>')
    ELSE
        IF Ver2:ExternVerkoopID=''
            st.Append('<YourRef>-</YourRef>')
        ELSE
            st.Append('<YourRef>'&Ver2:ExternVerkoopID&'</YourRef>')
        END
    END

    IF Ver2:Valuta='Pond' AND CurrentLayout<>LayOut:PurchaseOrder
        st.Append('<Currency code="GBP"/>')
    ELSIF Ver2:Valuta='Dollar' AND CurrentLayout<>LayOut:PurchaseOrder
        st.Append('<Currency code="USD"/>')
    ELSE
        st.Append('<Currency code="EUR"/>')
    END

    st.Append('<CalcIncludeVAT>N</CalcIncludeVAT>')
    IF CurrentLayout<>LayOut:PurchaseOrder
        Rel:RelatieID=Ver2:Klant
        Access:Relatie.Fetch(Rel:Relatie_PK)
        ! Aangepast 26-10-2018 eerst de vertegenwoordiger uit Exact
        Clear(GEB:Record)
        Geb:ID=Ver2:GebruikerID
        IF Access:Gebruiker.Fetch(Geb:PK_Gebruiker)=Level:Benign AND Geb:res_id <> 0
            st.Append('<Resource number="'&geb:res_id&'" >')
        ELSE
            IF Rel:Acc_Man=0
                Message('Vertegenwoordiger en Relatie ('&Ver2:GebruikerID&') en Relatie ('&Ver2:Klant&') hebben res_id gelijk aan 0 ('&Geb:res_id&')')
            END
            st.Append('<Resource number="'&Rel:Acc_Man&'" >')
        END
        st.Append(' </Resource>')
    ELSE
        Rel:RelatieID=INk:Leverancier
        Access:Relatie.Fetch(Rel:Relatie_PK)
    END

    IF CurrentLayout=LayOut:PurchaseOrder
        st.Append('<OrderedAt>')
        ExportClass.ExportDebtor()
        st.Append('</OrderedAt>')
    ELSE
        st.Append('<OrderedBy>')
        ExportClass.ExportDebtor()
        st.Append('</OrderedBy>')
    END

    st.Append('<DeliverTo>')
    ExportClass.ExportDebtor()
    st.Append('</DeliverTo>')
    st.Append('<InvoiceTo>')
    ExportClass.ExportDebtor()
    st.Append('</InvoiceTo>')

    ! ik skip de warehouse
    st.Append('<Warehouse code="1">')
!   <Description>Hoofdmagazijn</Description>
!    <Address>
!     <AddressLine1 />
!     <AddressLine2 />
!     <AddressLine3 />
!     <PostalCode />
!     <City />
!     <Country code="NL" />
!    </Address>
    st.Append('</Warehouse>')

    ! ik skip de payment
    ! ik skip de delivery
    ! ik skip de costcenter
    ! ik skip de invoicegroup
    ! ik skip de Freight
    ! ik skip de FreeFeilds
    Clear(OrderLine)
    CLEAR(Pla:Record)
    IF CurrentLayout=LayOut:PurchaseOrder
        Pla:InkoopID = Ink:InkoopID
        Set(Pla:Planning_FK01,Pla:Planning_FK01)
        Loop UNTIL Access:Planning.Next()
            IF NOT Pla:InkoopID = Ink:InkoopID THEN BReak.
            Clear(Art:Record)
            Art:ArtikelID=Pla:ArtikelID
            if Access:ViewArtikel.Fetch(Art:Artikel_PK)=Level:Benign

            END

            OrderLine +=1
            ExportClass.XMLOrderLine(OrderLine)
        END
    ELSE
        Pla:VerkoopID = Ver2:VerkoopID
        Set(Pla:Planning_FK02,Pla:Planning_FK02)
        Loop UNTIL Access:Planning.Next()
            IF NOT Pla:VerkoopID = Ver2:VerkoopID THEN BReak.
            Clear(Art:Record)
            Art:ArtikelID=Pla:ArtikelID
            if Access:ViewArtikel.Fetch(Art:Artikel_PK)=Level:Benign

            END

            OrderLine +=1
            ExportClass.XMLOrderLine(OrderLine)
        END
    END
    IF CurrentLayout=LayOut:Invoice
        st.Append('</Invoice>')
    ELSE
        st.Append('</Order>')
    END

    RETURN

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ExportClass.XMLOrderLine  PROCEDURE(LONG pLineNo)


CODE
    IF CurrentLayout=LayOut:Invoice
        st.Append('<InvoiceLine lineNo="'&pLineNo&'">')
        st.Append('<SalesOrderNo>'&Ver2:VerkoopID&'</SalesOrderNo>')
        st.Append('<LineYourRef>'&Ver2:VerkoopID&'</LineYourRef>')
    ELSE
        st.Append('<OrderLine lineNo="'&pLineNo&'">')
    END

    st.Append('<Description>'&ExportClass.DecodeXML(CHOOSE(Pla:AlternatieveArtikelOms='',Art:ArtikelOms,Pla:AlternatieveArtikelOms))&'</Description>')
    st.Append('<LongDescription>'&ExportClass.DecodeXML(CHOOSE(Pla:AlternatieveArtikelOms='',Art:ArtikelOms,Pla:AlternatieveArtikelOms))&'</LongDescription>')
    st.Append('<Item code="'&Pla:ArtikelID&'" type="S" searchcode="'&Pla:ArtikelID&'">')

!    st.Append('<Assortment number="5" code="030"><Description>Geslachte kuikens</Description>')
!    st.Append('<GLRevenue code="     8015" side="C" type="W" subtype="J">    <Description>Opbrengst kuikens</Description>   </GLRevenue>')
!    st.Append('<GLCosts code="     7015" side="D" type="W" subtype="K">    <Description>Inkopen geslachte kuikens</Description>   </GLCosts>')
!    st.Append('<GLPurchase code="     3015" side="D" type="B" subtype="G">    <Description>Voorraad geslachte kuikens</Description>   </GLPurchase>')
!    st.Append('<GLPriceDifference code="     7021" side="D" type="W" subtype="K">    <Description>Prijsverschil overige</Description>   </GLPriceDifference>')
!    st.Append(' </Assortment>')
    st.Append('')
!    st.Append('<Sales>')
!    st.Append('<Price type="S">')
!    st.Append('<Currency code="EUR"/>')
!    st.Append('<Value>'&Pla:VerkoopKGPrijs&'</Value>')
!    st.Append('</Price>')
!    st.Append('<Unit unit="kg" type="W" active="1">')
!    st.Append('</Unit>')
!    st.Append('</Sales>')

    st.Append('<Costs>')
    st.Append('<Price>')
    IF Ver2:Valuta='Pond' AND CurrentLayout<>LayOut:PurchaseOrder
        st.Append('<Currency code="GBP"/>')
    ELSIF Ver2:Valuta='Dollar' AND CurrentLayout<>LayOut:PurchaseOrder
        st.Append('<Currency code="USD"/>')
    ELSE
        st.Append('<Currency code="EUR"/>')
    END
    IF CurrentLayout=LayOut:PurchaseOrder
        st.Append('<Value>'&Pla:InkoopKGPrijs&'</Value>')
    ELSE
        IF PLA:PartijID >0
            CLEAR(Par:Record)
            Par:PartijID = Pla:PartijID
            IF Access:Partij.TryFetch(Par:Partij_PK) <> Level:Benign THEN
                CLEAR(Par:Record)
            END
            st.Append('<Value>'&Par:InkoopKGPrijs&'</Value>')
        ELSE
            st.Append('<Value>'&Pla:InkoopKGPrijs&'</Value>')
        END
    END

    st.Append('</Price>')
    st.Append('</Costs>')

    st.Append('</Item>')
    st.Append('<Quantity>'&CHOOSE(Pla:MutatieGemaakt,Pla:MutatieKG,Pla:KG)&'</Quantity>')
    st.Append('<Unit unit="kg" type="O" active="1">')
    st.Append('</Unit>')

    st.Append('<Price type="S">')
    IF Ver2:Valuta='Pond' AND CurrentLayout<>LayOut:PurchaseOrder
        st.Append('<Currency code="GBP"/>')
    ELSIF Ver2:Valuta='Dollar' AND CurrentLayout<>LayOut:PurchaseOrder
        st.Append('<Currency code="USD"/>')
    ELSE
        st.Append('<Currency code="EUR"/>')
    END
    IF CurrentLayout=LayOut:PurchaseOrder
        st.Append('<Value>'&Pla:InkoopKGPrijs&'</Value>')
    ELSE
        st.Append('<Value>'&Pla:VerkoopKGPrijs&'</Value>')
    END

    st.Append('<VAT code="'&CLIP(Rel:VatCode)&'" type="V" vattype="N" taxtype="V">')
!        <Description>B.T.W. verk. 0%  E.G.</Description>
!        <MultiDescriptions>
!             <MultiDescription number="1">B.T.W. verk. 0%  E.G.</MultiDescription>
!             <MultiDescription number="2">B.T.W. verk. 0%  E.G.</MultiDescription>
!             <MultiDescription number="3">B.T.W. verk. 0%  E.G.</MultiDescription>
!             <MultiDescription number="4">B.T.W. verk. 0%  E.G.</MultiDescription>
!        </MultiDescriptions>
!        <Percentage>0</Percentage>
!        <Charged>0</Charged>
!        <VATExemption>0</VATExemption>
!        <ExtraDutyPercentage>0</ExtraDutyPercentage>
!        <GLToPay code="     1308" side="D" type="B" subtype="C">
!         <Description></Description>
!        </GLToPay>
!        <Creditor code="              000002" number="000002" type="S">
!         <Name>Belastingdienst OB</Name>
!        </Creditor>
!        <PaymentPeriod>M</PaymentPeriod>
!        <VATListing>L</VATListing>
    st.Append('</VAT>')
    st.Append('</Price>')

    st.Append('<Amount type="S">')
    IF Ver2:Valuta='Pond' AND CurrentLayout<>LayOut:PurchaseOrder
        st.Append('<Currency code="GBP"/>')
    ELSIF Ver2:Valuta='Dollar' AND CurrentLayout<>LayOut:PurchaseOrder
        st.Append('<Currency code="USD"/>')
    ELSE
        st.Append('<Currency code="EUR"/>')
    END
    IF CurrentLayout=LayOut:PurchaseOrder
        st.Append('<Value>'&Pla:InkoopKGPrijs&'</Value>')
    ELSE
        st.Append('<Value>'&Pla:VerkoopKGPrijs*CHOOSE(Pla:MutatieGemaakt,Pla:MutatieKG,Pla:KG)&'</Value>')
    END

    st.Append('</Amount>')

    st.Append('<Delivery>')
    st.Append('<Date>'&Format(Ver2:Planning_DATE,@D010-)&'</Date>')
    st.Append('</Delivery>')
    st.Append('<Text>'&ExportClass.DecodeXML(CHOOSE(Pla:AlternatieveArtikelOms='',Art:ArtikelOms,Pla:AlternatieveArtikelOms))&'</Text>')

    IF CurrentLayout=LayOut:Invoice
        st.Append('</InvoiceLine>')
    ELSE
        st.Append('</OrderLine>')
    END

    RETURN

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ExportClass.ExportDebtor    PROCEDURE()


CODE
    IF CurrentLayout=LayOut:PurchaseOrder
        st.Append('<Creditor code="'&CLIP(Rel:Code)&'" number="" type="S">')
    ELSE
        st.Append('<Debtor code="'&CLIP(Rel:Code)&'" number="" type="C">')
    END

    st.Append('<Name>'&ExportClass.DecodeXML(Rel:FirmaNaam)&'</Name>')
    IF CurrentLayout=LayOut:PurchaseOrder
        st.Append('</Creditor>')
    ELSE
        st.Append('</Debtor>')
    END
    st.Append('<Address>')
    st.Append('<Addressee>')
!      st.Append('<Name>Menida</Name>')
!      st.Append('<Initials>L.</Initials>')
!      st.Append('<Title code="DHR" />')
!      st.Append('<JobDescription>--</JobDescription>')
    st.Append('</Addressee>')
    st.Append('<AddressLine1>'&ExportClass.DecodeXML(Rel:Adres1)&'</AddressLine1>')
    st.Append('<AddressLine2>'&ExportClass.DecodeXML(Rel:Adres2)&'</AddressLine2>')
    st.Append('<AddressLine3 />')
    st.Append('<PostalCode>'&Rel:Postcode&'</PostalCode>')
    st.Append('<City>'&ExportClass.DecodeXML(Rel:Plaats)&'</City>')
    st.Append('<State code="GR" />')
    st.Append('<Country code="'&Rel:cmp_fctry&'" />')
    st.Append('</Address>')
    st.Append('<Date>'&Format(Ver2:Planning_DATE,@D010-)&'</Date>')

    RETURN

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ExportClass.DecodeXML       PROCEDURE(String pXML)
decodexml               StringTheory
CODE
    decodexml.SetValue(pXml)
    decodexml.Replace('&','&amp;')
    decodexml.Replace('<','&lt;')
    decodexml.Replace('>','&gt;')
    return decodexml.Str()

[END]
EMBED %LocalDataAfterClasses
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ExportClass         CLASS
XMLHeader               PROCEDURE
XMLOrder                PROCEDURE
XMLOrderLine            PROCEDURE(LONG)
ExportDebtor            PROCEDURE()
DecodeXML               PROCEDURE(String), String
                    END

st                  StringTheory()
FileName            CString(200)
bestaandbestand     Byte
VerkoopPrijsNul     Byte

LayOut              ITEMIZE,PRE
InvoiceOrder            EQUATE
Invoice                 EQUATE
PurchaseOrder           EQUATE
Unkown                  EQUATE
                    END
CurrentLayout       LONG
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
LABEL
PROPERTY:END
    Case __layout
    of 'Order'
        CurrentLayout=LayOut:InvoiceOrder
        FileName = GETINI('Exact','ExportBestand','','.\Voorraad.ini')
    of 'Invoice'
        CurrentLayout=LayOut:Invoice
        FileName = GETINI('Exact','ExportBestandInvoice','','.\Voorraad.ini')
    of 'PurchaseOrder'
        CurrentLayout=LayOut:PurchaseOrder
        FileName = GETINI('Exact','ExportBestandPurchaseOrder','','.\Voorraad.ini')
    Else
        CurrentLayout=LayOut:Unkown
        Message('Layout is onbekend')
    END
    IF FileName=''
        Message('In systeemgegevens bestandslocatie opgeven')
    END

    Access:Gebruiker.Open()
    Access:Gebruiker.UseFile()
    st.SetValue('')
    bestaandbestand = st.LoadFile(FileName)    ! bij een nieuw bestand gewoon toevoegen, anders xml erin plaatsten
    if bestaandbestand
                ! dan moet ik de sluittags verwijderen
        st.Remove('<</Orders','<</eExact>')
    END
    IF CurrentLayout=LayOut:PurchaseOrder
        IF Access:Inkoop.Fetch(Ink:PK_Inkoop)=Level:Benign
            ExportClass.XMLHeader
            st.ToUnicode(st:EncodeUtf8,st:CP_WINDOWS_1250)
            st.SaveFile(FileName)
        END
    ELSE
        IF Access:Verkoop.Fetch(Ver2:PK_Verkoop)=Level:Benign
            !2019-6-28 controle op verkoopprijs gelijk aan 0
            VerkoopPrijsNul=FALSE
            CLEAR(Pla:Record)
            Pla:VerkoopID = Ver2:VerkoopID
            Set(Pla:Planning_FK02,Pla:Planning_FK02)
            Loop UNTIL Access:Planning.Next()
                IF NOT Pla:VerkoopID = Ver2:VerkoopID THEN BReak.
                IF Pla:VerkoopKGPrijs=0
                    VerkoopPrijsNul=TRUE
                    BREAK
                END
            END
            IF VerkoopPrijsNul=FALSE OR |
                Message('Verkoop '&Ver2:VerkoopID&' heeft een orderregel met verkoopprijs gelijk aan nul|Wilt u deze toch exporteren?',|
                    'Verkoopprijs gelijk aan nul',Icon:Cross,Button:Yes+Button:No, Button:No)=Button:Yes
                ExportClass.XMLHeader
                st.ToUnicode(st:EncodeUtf8,st:CP_WINDOWS_1250)
                st.SaveFile(FileName)
                IF CurrentLayout=LayOut:InvoiceOrder
                    Ver2:Exported=TRUE
                    GLO:GebruikerLogHandelingOpmerking='Export naar Exact'
                    Access:Verkoop.Update()
                END
            END
        ELSE
            Message('Verkoop zoek error '&ERROR())
        END
    END
    Access:Gebruiker.Close()
[END]
[END]
[ADDITION]
NAME NetTalk Local_Use_NetRefresh
[INSTANCE]
INSTANCE 2
OWNER 3
[PROMPTS]
%NoNetRefreshHere LONG  (0)
%NetRefreshFrame LONG  (0)
%SendRefreshAtOK DEFAULT  ('Use Global Default')
%RefreshAnyway LONG  (0)
%DependOnAll LONG  (1)
%DependFiles MULTI LONG  ()
%DependFile DEPEND %DependFiles FILE TIMES 0

%DependFileHC DEPEND %DependFiles DEFAULT TIMES 0

%SendRefreshPrimary LONG  (1)
%RefreshFiles MULTI LONG  ()
%RefreshFile DEPEND %RefreshFiles FILE TIMES 0

[ADDITION]
NAME WinEvent WinEvent
[INSTANCE]
INSTANCE 1
OWNER 1
[PROMPTS]
%DisableWinEvent LONG  (0)
%CheckForCantCloseNowSetHere LONG  (1)
%AutoDown LONG  (0)
%NoAutoDown LONG  (0)
%LocWindowsVisible DEFAULT  ('0')
%WindowsVisibleAfterOpen LONG  (1)
%AlertWinEventDebug LONG  (0)
%DisplayCompileDate LONG  (0)
%DisplayCompileDateFormat DEFAULT  ('@D6')
%locNoHandleCloseDown LONG  (0)
%locCloseDownWhenWindowCloses LONG  (0)
%locCloseDownWhenWindowClosesCtrl DEFAULT  ('')
%WinAlert MULTI LONG  ()
%Mess DEPEND %WinAlert DEFAULT TIMES 0

%Act1 DEPEND %WinAlert DEFAULT TIMES 0

%act2 DEPEND %WinAlert DEFAULT TIMES 0

%locCloseDownWhenWindowClosesSet LONG  (0)
%SortListbox MULTI LONG  ()
%ThisListbox DEPEND %SortListbox DEFAULT TIMES 0

%ThisListboxHeader DEPEND %SortListbox MULTI DEFAULT TIMES 0

%gloWinEventTesting LONG  (0)
%gloWinEventTestingColor1 LONG  (15728618)
%gloWinEventTestingColor2 LONG  (16777215)
[END]
