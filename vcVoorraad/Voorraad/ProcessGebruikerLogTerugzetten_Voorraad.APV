[MODULE]
NAME 'ProcessGebruikerLogTerugzetten_Voorraad.clw'
[COMMON]
FROM ABC GENERATED
[PROCEDURE]
NAME ProcessGebruikerLogTerugzetten
[COMMON]
DESCRIPTION 'Uit GebruikerLog File Partij, Verkoop en Planning terughalen'
FROM ABC Process
CATEGORY 'Process'
[DATA]
Progress:Thermometer     BYTE
!!> GUID('2ee2a927-9a06-4acb-ba61-115c784d305f')
[SCREENCONTROLS]
! PROMPT('Loc : SQLC ommando:'),USE(?Loc:SQLCommando:Prompt)
! ENTRY(@s255),USE(Loc:SQLCommando)
[REPORTCONTROLS]
! STRING(@s255),USE(Loc:SQLCommando)
Loc:SQLCommando          CSTRING(64000)
!!> GUID('40bf0fd0-2f3d-49d6-b2c9-29feceaa285f'),PROMPT('Loc : SQLC ommando:'),HEADER('Loc : SQLC ommando'),PICTURE(@s255),TYPEMODE(INS)
[FILES]
[PRIMARY]
GebruikerLog
[INSTANCE]
0
[KEY]
Log:PK_GebruikerLog
[OTHERS]
Planning
Verkoop
Partij
[PROMPTS]
%ButtonAction DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('No Special Action')
WHEN  ('?Pause') ('No Special Action')
WHEN  ('?Progress:Cancel') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 0

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 0

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 0

%ButtonThread DEPEND %Control LONG TIMES 0

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('25000')
WHEN  ('?Pause') ('25000')
WHEN  ('?Progress:Cancel') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 0

%ButtonRequest DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('None')
WHEN  ('?Pause') ('None')
WHEN  ('?Progress:Cancel') ('None')

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%ClassItem UNIQUE DEFAULT  ('Default', 'Process', 'ProgressMgr', 'WindowToolbar')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ReportManager')
WHEN  ('Process') ('ProcessClass')
WHEN  ('ProgressMgr') ('StepClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('StepLongClass')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 2
WHEN  ('Default') ('Init {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Init {19}PROCEDURE(ProcessClass PC,<<REPORT R>,<<PrintPreviewClass PV>)', |
  'Kill {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Paused {17}BYTE', 'Timer {18}LONG', |
  'TakeAccepted {11}PROCEDURE(),BYTE,PROC,DERIVED', 'TakeEvent {14}PROCEDURE(),BYTE,PROC,DERIVED', |
  'TakeWindowEvent        PROCEDURE(),BYTE,PROC,DERIVED')
WHEN  ('Process') ('TakeRecord {13}PROCEDURE(),BYTE,PROC,DERIVED')

%ReturnValue FIELD  ()
%ProcedureOneInstance LONG  (0)
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalObject DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('NO')
WHEN  ('Process') ('NO')
WHEN  ('ProgressMgr') ('NO')
WHEN  ('WindowToolbar') ('NO')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ThisWindow')
WHEN  ('Process') ('ThisProcess')
WHEN  ('ProgressMgr') ('ProgressMgr')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('ADOBlob')
WHEN  ('Process') ('ADOBlob')
WHEN  ('ProgressMgr') ('ADOBlob')
WHEN  ('WindowToolbar') ('ADOBlob')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (0)
WHEN  ('Process') (0)
WHEN  ('ProgressMgr') (0)
WHEN  ('WindowToolbar') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  (1, 2, 3, 4, 5, 6)
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 6
WHEN  (1) ('Log:Handeling')
WHEN  (2) ('Log:HandelingOpmerking')
WHEN  (3) ('Log:Tabel')
WHEN  (4) ('Log:RecordInhoudPre')
WHEN  (5) ('Log:Uitgevoerd')
WHEN  (6) ('Log:ID')

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 6
WHEN  (1) ('Process')
WHEN  (2) ('Process')
WHEN  (3) ('Process')
WHEN  (4) ('Process')
WHEN  (5) ('Process')
WHEN  (6) ('Process')

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (0)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%PreserveVarsLoc MULTI LONG  ()
%PreserveVarLoc DEPEND %PreserveVarsLoc DEFAULT TIMES 0

%ReportDataSource DEFAULT  ('File')
%WindowMessage DEFAULT  ('Partijen terughalen')
%ProcessAction DEFAULT  ('No record action')
%UseProcessActionToTitle LONG  (1)
%RIProcessAction LONG  (0)
%UseMRP LONG  (1)
%QueryDelete LONG  (0)
%MDIProgressWindow LONG  (0)
%ProgressInterval DEFAULT  ('10')
%EnableQuickScan LONG  (1)
%RecordFilter DEFAULT  ('')
%AdditionalSortType DEFAULT  ('Manual')
%AddSortFields DEFAULT  ('')
%AddSortFieldsAssisted MULTI LONG  ()
%AddSortFieldAssisted DEPEND %AddSortFieldsAssisted FIELD TIMES 0

%AddSortFieldAssistedOrder DEPEND %AddSortFieldsAssisted DEFAULT TIMES 0

%AddConditionalSort MULTI LONG  ()
%AddConditionalSortCondition DEPEND %AddConditionalSort DEFAULT TIMES 0

%AddConditionalSortFieldsAssisted DEPEND %AddConditionalSort MULTI LONG TIMES 0

%AddConditionalSortFieldAssisted DEPEND %AddConditionalSortFieldsAssisted FIELD TIMES 0

%AddConditionalSortFieldAssistedOrder DEPEND %AddConditionalSortFieldsAssisted DEFAULT TIMES 0

%AddSortDynamicNamed MULTI LONG  ()
%AddSortFieldDinNameDescription DEPEND %AddSortDynamicNamed DEFAULT TIMES 0

%AddSortFieldsDinName DEPEND %AddSortDynamicNamed MULTI LONG TIMES 0

%AddSortFieldDinName DEPEND %AddSortFieldsDinName FIELD TIMES 0

%AddSortFieldDinNameOrder DEPEND %AddSortFieldsDinName DEFAULT TIMES 0

%AddSortFieldsDinSort MULTI LONG  ()
%AddSortFieldDinSortDescription DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AddSortFieldDinSort DEPEND %AddSortFieldsDinSort FIELD TIMES 0

%AddSortFieldDinSortOrder DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AdditionalSortWindowTitle DEFAULT  ('Select the Order')
%AdditionalSortWindowMessage DEFAULT  ('Select the order to process the data.')
%AdditionalSortWindowOkButtonText DEFAULT  ('&OK')
%AdditionalSortWindowOkButtonIcon DEFAULT  ('SOK.ICO')
%AdditionalSortWindowOkButtonCursor DEFAULT  ('')
%AdditionalSortWindowOkButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowOkButtonMsg DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonTip DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonFlat LONG  (1)
%AdditionalSortWindowOkButtonSkip LONG  (0)
%AdditionalSortWindowOkButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowCancelButtonText DEFAULT  ('&Cancel')
%AdditionalSortWindowCancelButtonIcon DEFAULT  ('SCANCEL.ICO')
%AdditionalSortWindowCancelButtonCursor DEFAULT  ('')
%AdditionalSortWindowCancelButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowCancelButtonMsg DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonTip DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonFlat LONG  (1)
%AdditionalSortWindowCancelButtonSkip LONG  (0)
%AdditionalSortWindowCancelButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowUpButtonText DEFAULT  ('')
%AdditionalSortWindowUpButtonIcon DEFAULT  ('SUP.ICO')
%AdditionalSortWindowUpButtonCursor DEFAULT  ('')
%AdditionalSortWindowUpButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowUpButtonMsg DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonTip DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonFlat LONG  (1)
%AdditionalSortWindowUpButtonSkip LONG  (0)
%AdditionalSortWindowUpButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowDownButtonText DEFAULT  ('')
%AdditionalSortWindowDownButtonIcon DEFAULT  ('SDOWN.ICO')
%AdditionalSortWindowDownButtonCursor DEFAULT  ('')
%AdditionalSortWindowDownButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowDownButtonMsg DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonTip DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonFlat LONG  (1)
%AdditionalSortWindowDownButtonSkip LONG  (0)
%AdditionalSortWindowDownButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowChOrdButtonText DEFAULT  ('')
%AdditionalSortWindowChOrdButtonIcon DEFAULT  ('SCH-ORD.ICO')
%AdditionalSortWindowChOrdButtonCursor DEFAULT  ('')
%AdditionalSortWindowChOrdButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowChOrdButtonMsg DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonTip DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonFlat LONG  (1)
%AdditionalSortWindowChOrdButtonSkip LONG  (0)
%AdditionalSortWindowChOrdButtonJustification DEFAULT  ('Left')
%ApproxRecordCount DEFAULT  ('')
%ManuallySetProgressLimits LONG  (0)
%LowLimit DEFAULT  ('')
%HighLimit DEFAULT  ('')
%RangeField COMPONENT  ()
%HigherKeys MULTI LONG  ()
%HigherKey DEPEND %HigherKeys COMPONENT TIMES 0

%RangeLimitType DEFAULT  ('Current Value')
%HigherKeyField DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueType DEPEND %HigherKeys DEFAULT TIMES 0

%HigherKeyValueVariable DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueFixed DEPEND %HigherKeys DEFAULT TIMES 0

%RangeLimit FIELD  ()
%RangeLow FIELD  ()
%RangeHigh FIELD  ()
%RangeFile FILE  ()
%HotFields MULTI LONG  (1, 2, 3, 4, 5, 6)
%HotField DEPEND %HotFields FIELD TIMES 6
WHEN  (1) (Log:Handeling)
WHEN  (2) (Log:HandelingOpmerking)
WHEN  (3) (Log:Tabel)
WHEN  (4) (Log:RecordInhoudPre)
WHEN  (5) (Log:Uitgevoerd)
WHEN  (6) (Log:ID)

%HotFieldBound DEPEND %HotFields LONG TIMES 6
WHEN  (1) (1)
WHEN  (2) (1)
WHEN  (3) (1)
WHEN  (4) (1)
WHEN  (5) (1)
WHEN  (6) (1)

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('Default')
WHEN  ('?Pause') ('Default')
WHEN  ('?Progress:Cancel') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('Off')
WHEN  ('?Pause') ('Off')
WHEN  ('?Progress:Cancel') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('')
WHEN  ('?Pause') ('')
WHEN  ('?Progress:Cancel') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 3
WHEN  ('') (0)
WHEN  ('?Pause') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 3
WHEN  ('') (-1)
WHEN  ('?Pause') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 3
WHEN  ('') (0)
WHEN  ('?Pause') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 3
WHEN  ('') (-1)
WHEN  ('?Pause') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 3
WHEN  ('') (0)
WHEN  ('?Pause') (0)
WHEN  ('?Progress:Cancel') (0)

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 0

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 0

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 0

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 3
WHEN  ('') (1)
WHEN  ('?Pause') (1)
WHEN  ('?Progress:Cancel') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 3
WHEN  ('')TIMES 0
WHEN  ('?Pause')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedEnables DEPEND %Control MULTI LONG TIMES 0

%CheckedControl1 DEPEND %CheckedEnables DEFAULT TIMES 0

%CheckedControl1Action DEPEND %CheckedEnables DEFAULT TIMES 3
WHEN  ('')TIMES 0
WHEN  ('?Pause')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 3
WHEN  ('')TIMES 0
WHEN  ('?Pause')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedEnables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl1 DEPEND %UnCheckedEnables DEFAULT TIMES 0

%UnCheckedControl1Action DEPEND %UnCheckedEnables DEFAULT TIMES 3
WHEN  ('')TIMES 0
WHEN  ('?Pause')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 3
WHEN  ('')TIMES 0
WHEN  ('?Pause')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 3
WHEN  ('')TIMES 0
WHEN  ('?Pause')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('AIBtn0')
WHEN  ('?Pause') ('AIBtn5')
WHEN  ('?Progress:Cancel') ('AIBtn4')

%AIEnableMimicControl DEPEND %Control LONG TIMES 3
WHEN  ('') (1)
WHEN  ('?Pause') (1)
WHEN  ('?Progress:Cancel') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('?Progress:Thermometer')
WHEN  ('?Pause') ('?Progress:Thermometer')
WHEN  ('?Progress:Cancel') ('?Progress:Thermometer')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 3
WHEN  ('') (0)
WHEN  ('?Pause') (0)
WHEN  ('?Progress:Cancel') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 3
WHEN  ('') (0)
WHEN  ('?Pause') (0)
WHEN  ('?Progress:Cancel') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 3
WHEN  ('') (0)
WHEN  ('?Pause') (0)
WHEN  ('?Progress:Cancel') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 3
WHEN  ('') (0)
WHEN  ('?Pause') (0)
WHEN  ('?Progress:Cancel') (0)

[EMBED]
EMBED %ProcessManagerMethodCodeSection
[INSTANCES]
WHEN 'TakeRecord'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2501
PROPERTY:END
    Case Log:Tabel
    of 'Partij'
        LocalClass.RestorePartij(Log:RecordInhoudPre)
    of 'Verkoop'
        LocalClass.RestoreVerkoop(Log:RecordInhoudPre)
    of 'Planning'
        LocalClass.RestorePlanning(Log:RecordInhoudPre)
    End
[END]
[END]
[END]
EMBED %WindowManagerMethodCodeSection
[INSTANCES]
WHEN 'Init'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 7800
PROPERTY:END
!  ! kan ik hier identity insert uitzetten
!Partij{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Partij ON'
!IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).
!Planning{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Planning ON'
!IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).
!Verkoop{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Verkoop ON'
!IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).
[SOURCE]
PROPERTY:BEGIN
PRIORITY 8550
PROPERTY:END
  ! 2019-8-28 is deze gebruikt voor het terughalen van de partijen
      !ThisProcess.SetFilter('Log:Handeling=''Delete'' and Log:HandelingOpmerking=''BrowseInkoop''And Log:Tabel=''Partij''')
  ! 2019-10-11 Terughalen verkoop en Planning
      ThisProcess.SetFilter('Log:Handeling=''Delete'' and Log:Uitgevoerd>=''2019-10-11 14:58:29'' and LOG:Uitgevoerd <=''2019-10-11 14:58:31''')
!ThisProcess.SetFilter('Log:Handeling=''Delete'' and Log:Uitgevoerd_DATE=''2019-10-11'' and LOG:Uitgevoerd_TIME <=''14:58:29''and LOG:Uitgevoerd_TIME <=''14:58:31''')
!ThisProcess.SetFilter('Log:ID=1939290')
[END]
[END]
WHEN 'Kill'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5600
PROPERTY:END
!! kan ik hier identity insert uitzetten
!Partij{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Partij OFF'
!IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).
!Planning{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Planning OFF'
!IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).
!Verkoop{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Verkoop OFF'
!IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).
[END]
[END]
[END]
EMBED %LocalDataAfterClasses
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LocalClass          CLASS
RestorePartij           PROCEDURE(String)
RestorePlanning         PROCEDURE(String)
RestoreVerkoop          PROCEDURE(String)
                    END
[END]
EMBED %LocalProcedures
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LocalClass.RestorePartij    PROCEDURE(_RecordInhoudPre)
Code
  ! kan ik hier identity insert uitzetten
    Partij{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Partij ON'
    IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).
    Clear(Par:Record)

    St.SetValue(_RecordInhoudPre)
    st.split('<13,10>')
    loop i# = 1 to st.Records()
        Str.SetValue(St.GetLine(i#))      ! PAR:PARTIJID=30292            ,  5-12-1883            ,  0:05            , 3
        Str.Split(',')
        stVeld.SetValue(Str.GetLine(1))    ! PAR:PARTIJID=30292
        stVeld.After('=')
    !SETCLIPBOARD(stVeld.Before('=')&'|'&stVeld.After('='))             !PAR:PARTIJID|30292
        Case stVeld.Before('=')
        OF 'PAR:PARTIJID'
            Par:PartijID=stVeld.After('=')
        OF 'PAR:ARTIKELID'
            Par:ArtikelID=stVeld.After('=')
        OF 'PAR:AANMAAKDATUM_DATE'
            Par:AanmaakDatum_DATE=stVeld.After('=')
        OF 'PAR:AANMAAKDATUM_TIME'
            Par:AanmaakDatum_TIME=0
        OF 'PAR:KG'
            Par:KG=stVeld.After('=')
        OF  'PAR:PALLETS'
            Par:Pallets=stVeld.After('=')
        OF 'PAR:VERPAKKINGID'
            Par:VerpakkingID=stVeld.After('=')
        OF 'PAR:LEVERANCIER'
            Par:Leverancier=stVeld.After('=')
        of 'PAR:VERWERKT'
            Par:Verwerkt=stVeld.After('=')
        of 'PAR:CELID'
            Par:CELID=stVeld.After('=')
        of 'PAR:PALLETSGEPRINT'
            Par:PalletsGeprint=stVeld.After('=')
        of 'PAR:REFERENTIE'
            Par:Referentie=stVeld.After('=')
        of 'PAR:INSLAGQATEMPERATUUR1'
            PAR:INSLAGQATEMPERATUUR1=stVeld.After('=')
        of 'PAR:EXTERNPARTIJNR'
            PAR:EXTERNPARTIJNR=stVeld.After('=')
        of 'PAR:BEREKENDEINKOOPKGPRIJS'
            PAR:BEREKENDEINKOOPKGPRIJS=stVeld.After('=')
        of 'PAR:INKOOPID'
            PAR:INKOOPID=stVeld.After('=')
        of 'PAR:INKOOPPLANNINGID'
            PAR:INKOOPPLANNINGID=stVeld.After('=')
        of 'PAR:INKOOPKGPRIJS'
            PAR:INKOOPKGPRIJS=stVeld.After('=')
        of 'PAR:INSLAGQATRANSPORTMIDDELSCHOON'
            PAR:INSLAGQATRANSPORTMIDDELSCHOON=stVeld.After('=')
        of 'PAR:INSLAGQAVERPAKKINGSCHOONGESLOTEN'
            PAR:INSLAGQAVERPAKKINGSCHOONGESLOTEN=stVeld.After('=')
        of 'PAR:INSLAGQAIDENTIFICATIEMERKENVERPAKKING'
            PAR:INSLAGQAIDENTIFICATIEMERKENVERPAKKING=stVeld.After('=')
        of 'PAR:INSLAGQAUITGEVOERDDOOR'
            PAR:INSLAGQAUITGEVOERDDOOR=stVeld.After('=')
        of 'PAR:INSLAGQATEMPERATUUR2'
            PAR:INSLAGQATEMPERATUUR2=stVeld.After('=')
        of 'PAR:INSLAGQATEMPERATUUR3'
            PAR:INSLAGQATEMPERATUUR3=stVeld.After('=')
        of 'PAR:INSLAGQAACTIEAFWIJKINGEN'
            PAR:INSLAGQAACTIEAFWIJKINGEN=stVeld.After('=')
        of 'PAR:VERPAKKINGKLASSEID'
            PAR:VERPAKKINGKLASSEID=stVeld.After('=')
        of 'PAR:CORRIGERENDEMAATREGEL'
            PAR:CORRIGERENDEMAATREGEL=stVeld.After('=')
        of 'PAR:AFGEHANDELD'
            PAR:AFGEHANDELD=stVeld.After('=')
        of 'PAR:INSLAGQAISGEURKLEURPRODUCTEIGEN'
            PAR:INSLAGQAISGEURKLEURPRODUCTEIGEN=stVeld.After('=')
        of 'PAR:INSLAGQAGEENGLASBREUK'
            PAR:INSLAGQAGEENGLASBREUK=stVeld.After('=')
        of 'PAR:INSLAGQATEMPERATUURVERVOERMIDDEL'
            PAR:INSLAGQATEMPERATUURVERVOERMIDDEL=stVeld.After('=')
        of 'PAR:CORRECTIEVEMAATREGEL'
            PAR:CORRECTIEVEMAATREGEL=stVeld.After('=')
        END
    End
    Loc:SQLCommando='INSERT INTO dbo.Partij(PartijID, ArtikelID, Aanmaakdatum, KG, Pallets'&|
        ', VerpakkingID,Leverancier, Verwerkt, CELID, PalletsGeprint, Referentie,Planinstructie'&|
        ', InslagQATemperatuur1, ExternPartijnr, BerekendeInkoopKGPrijs, InkoopID, InkoopPlanningID'&|
        ', InkoopKGPrijs, InslagQATransportmiddelSchoon, InslagQAVerpakkingSchoonGesloten'&|
        ', InslagQAIdentificatieMerkenVerpakking, InslagQAUitgevoerdDoor, InslagQATemperatuur2 '&|
        ', InslagQATemperatuur3, InslagQAActieAfwijkingen, VerpakkingKlasseID, CorrigerendeMaatregel '&|
        ', Afgehandeld, InslagQAIsGeurKleurProductEigen, InslagQAGeenGlasbreuk, InslagQATemperatuurVervoermiddel, CorrectieveMaatregel) VALUES('& |
        Par:PartijID&',<39>'&Par:ArtikelID&'<39>,<39>'&Format(Par:AanmaakDatum_DATE,@D10-)&' 00:00<39>,'&Par:KG&','&Par:Pallets&|
        ', '&Par:VerpakkingID &|
        ', '&Par:Leverancier&|
        ', '&Par:Verwerkt&|
        ', '&Par:CELID&|
        ', '&Par:PalletsGeprint&|
        ', <39>'&Par:Referentie&'<39>'&|
        ', <39>'&Par:Planinstructie&'<39>'&|
        ', <39>'&Par:InslagQATemperatuur1&'<39>'&|
        ', <39>'&Par:ExternPartijnr&'<39>'&|
        ', '&Par:BerekendeInkoopKGPrijs&|
        ', '&Par:InkoopID&|
        ', '&Par:InkoopPlanningID&|
        ', '&Par:InkoopKGPrijs&|
        ', '&Par:InslagQATransportmiddelSchoon&|
        ', '&Par:InslagQAVerpakkingSchoonGesloten&|
        ', '&Par:InslagQAIdentificatieMerkenVerpakking&|
        ', <39>'&Par:InslagQAUitgevoerdDoor&'<39>'&|
        ', <39>'&Par:InslagQATemperatuur2&'<39>'&|
        ', <39>'&Par:InslagQATemperatuur3&'<39>'&|
        ', <39>'&Par:InslagQAActieAfwijkingen&'<39>'&|
        ', '&Par:VerpakkingKlasseID&|
        ', <39>'&Par:CorrigerendeMaatregel&'<39>'&|
        ', <39>'&Par:Afgehandeld&'<39>'&|
        ', '&Par:InslagQAIsGeurKleurProductEigen&|
        ', '&Par:InslagQAGeenGlasbreuk&|
        ', <39>'&Par:InslagQATemperatuurVervoermiddel&'<39>'&|
        ', <39>'&Par:CorrectieveMaatregel&'<39>'&|
        ')'
    SetClipBoard(Loc:SQLCommando)
    Partij{Prop:SQL}=Loc:SQLCommando
   !Access:Partij.Insert()
!Add(Partij)
    IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).

! kan ik hier identity insert uitzetten
    Partij{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Partij OFF'
    IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).

    RETURN

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LocalClass.RestoreVerkoop    PROCEDURE(_RecordInhoudPre)
Code
    Verkoop{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Verkoop ON'
    IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).
    Clear(Ver2:Record)

    St.SetValue(_RecordInhoudPre)
    st.split('<13,10>')
    loop i# = 1 to st.Records()
        Str.SetValue(St.GetLine(i#))      ! VerkoopID | READONLY=37226            , 30-11-1902            ,  0:06            , 3
        Str.Split(',')
        stVeld.SetValue(Str.GetLine(1))    ! VerkoopID | READONLY=37226
        stVeld.After('=')
        Case stVeld.Before('=')
        OF 'VerkoopID | READONLY'
            Ver2:VerkoopID=stVeld.After('=')
        OF 'VER2:KLANT'
            VER2:KLANT=stVeld.After('=')
        OF 'VER2:VERWERKT'
            VER2:VERWERKT=stVeld.After('=')
        OF 'VER2:PLANNING_DATE'
            VER2:PLANNING_DATE=stVeld.After('=')
        OF 'VER2:PLANNING_TIME'
            VER2:PLANNING_TIME=0
        OF 'VER2:INSTRUCTIE'
            VER2:INSTRUCTIE=stVeld.After('=')
        OF  'VER2:TRANSPORT'
            VER2:TRANSPORT=stVeld.After('=')
        OF 'VER2:KLANTALTERNATIEFADRES'
            VER2:KLANTALTERNATIEFADRES=stVeld.After('=')
        OF 'VER2:EXTRAKOSTEN'
            VER2:EXTRAKOSTEN=stVeld.After('=')
        of 'VER2:EXTRAKOSTENTEKST'
            VER2:EXTRAKOSTENTEKST=stVeld.After('=')
        of 'VER2:EXTERNVERKOOPID'
            VER2:EXTERNVERKOOPID=stVeld.After('=')
        of 'VER2:NEGATIEVEORDER'
            VER2:NEGATIEVEORDER=stVeld.After('=')
        of 'VER2:REDENRETOUR'
            VER2:REDENRETOUR=stVeld.After('=')
        of 'VER2:CONFIRMATIONDATE_DATE'
            VER2:CONFIRMATIONDATE_DATE=stVeld.After('=')
        of 'VER2:CONFIRMATIONDATE_TIME'
            VER2:CONFIRMATIONDATE_TIME=0
        of 'VER2:GEBRUIKERID'
            VER2:GEBRUIKERID=stVeld.After('=')
        of 'VER2:BEVESTIGINGGEPRINT_DATE'
            VER2:BEVESTIGINGGEPRINT_DATE=stVeld.After('=')
        of 'VER2:BEVESTIGINGGEPRINT_TIME'
            VER2:BEVESTIGINGGEPRINT_TIME=stVeld.After('=')
        of 'VER2:DELIVERYTERMSID'
            VER2:DELIVERYTERMSID=stVeld.After('=')
        of 'VER2:RETOURDATUM_DATE'
            VER2:RETOURDATUM_DATE=stVeld.After('=')
        of 'VER2:RETOURDATUM_TIME'
            VER2:RETOURDATUM_TIME=stVeld.After('=')
        of 'VER2:EXPORTED'
            VER2:EXPORTED=stVeld.After('=')
        of 'VER2:VALUTA'
            VER2:VALUTA=stVeld.After('=')
        of 'VER2:KOERSVERSCHIL'
            VER2:KOERSVERSCHIL=stVeld.After('=')
        of 'VER2:CONTAINERNR'
            VER2:CONTAINERNR=stVeld.After('=')
        of 'VER2:SEALNR'
            VER2:SEALNR=stVeld.After('=')
        of 'VER2:VESSEL'
            VER2:VESSEL=stVeld.After('=')
        of 'VER2:PROFORMAMEMO'
            VER2:PROFORMAMEMO=stVeld.After('=')
        of 'VER2:TARRACONTAINER'
            VER2:TARRACONTAINER=stVeld.After('=')
        of 'VER2:LAADHAVEN'
            VER2:LAADHAVEN=stVeld.After('=')
        of 'VER2:LOSHAVEN'
            VER2:LOSHAVEN=stVeld.After('=')
        of 'VER2:BOEKINGSNR'
            VER2:BOEKINGSNR=stVeld.After('=')
        of 'VER2:BESCWAIVER'
            VER2:BESCWAIVER=stVeld.After('=')
        of 'VER2:EXPRESSERELEASE'
            VER2:EXPRESSERELEASE=stVeld.After('=')
        of 'VER2:AAN'
            VER2:AAN=stVeld.After('=')
        of 'VER2:OMSCHRIJVINGGOEDEREN'
            VER2:OMSCHRIJVINGGOEDEREN=stVeld.After('=')
        END
    End
    Loc:SQLCommando='INSERT INTO [dbo].[Verkoop] ' & |
'           ([VerkoopID] ' & |
'           ,[Klant] ' & |
'           ,[Verwerkt] ' & |
'           ,[Planning] ' & |
'           ,[Instructie] ' & |
'           ,[Transport] ' & |
'           ,[KlantAlternatiefAdres] ' & |
'           ,[ExtraKosten] ' & |
'           ,[ExtraKostenTekst] ' & |
'           ,[ExternVerkoopID] ' & |
'           ,[NegatieveOrder] ' & |
'           ,[RedenRetour] ' & |
'           ,[ConfirmationDate] ' & |
'           ,[GebruikerID] ' & |
'           ,[BevestigingGeprint] ' & |
'           ,[DeliveryTermsID] ' & |
'           ,[RetourDatum] ' & |
'           ,[Exported] ' & |
'           ,[Valuta] ' & |
'           ,[Koersverschil] ' & |
'           ,[Containernr] ' & |
'           ,[Sealnr] ' & |
'           ,[Vessel] ' & |
'           ,[ProFormaMemo] ' & |
'           ,[TarraContainer] ' & |
'           ,[Laadhaven] ' & |
'           ,[Loshaven] ' & |
'           ,[Boekingsnr] ' & |
'           ,[BESCWaiver] ' & |
'           ,[ExpresseRelease] ' & |
'           ,[Aan] ' & |
'           ,[OmschrijvingGoederen]) ' & |
        '            VALUES('& |
        Ver2:VerkoopID&|
        ','&Ver2:Klant&|
        ','&Ver2:Verwerkt&|
        ',<39>'&Format(Ver2:Planning_DATE,@D10-)&' 00:00<39>'&|
        ',<39>'&Ver2:Instructie&'<39>'&|
        ',<39>'&Ver2:Transport&'<39>'&|
        ', '&Ver2:KlantAlternatiefAdres &|
        ', '&Ver2:ExtraKosten&|
        ', <39>'&Ver2:ExtraKostenTekst&'<39>'&|
        ', <39>'&Ver2:ExternVerkoopID&'<39>'&|
        ', <39>'&Ver2:NegatieveOrder&'<39>'&|
        ', <39>'&Ver2:RedenRetour&'<39>'&|
        ', <39>'&Format(Ver2:ConfirmationDate_DATE,@D10-)&' '&Format(Ver2:ConfirmationDate_TIME,@T01)&'<39>'&|
        ', '&Ver2:GebruikerID&|
        ', <39>'&CHOOSE(Ver2:BevestigingGeprint_DATE=0,'1900-01-01',Format(Ver2:BevestigingGeprint_DATE,@D010-))&' '&Format(Ver2:BevestigingGeprint_TIME,@T01)&'<39>'&|
        ', '&Ver2:DeliveryTermsID&|
        ', <39>'&CHOOSE(Ver2:RetourDatum_DATE=0,'1900-01-01',Format(Ver2:RetourDatum_DATE,@D010-))&' '&Format(Ver2:RetourDatum_TIME,@T01)&'<39>'&|
        ', '&Ver2:Exported&|
        ', <39>'&Ver2:Valuta&'<39>'&|
        ', '&Ver2:Koersverschil&|
        ', <39>'&Ver2:Containernr&'<39>'&|
        ', <39>'&Ver2:Sealnr&'<39>'&|
        ', <39>'&Ver2:Vessel&'<39>'&|
        ', <39>'&Ver2:ProFormaMemo&'<39>'&|
        ', <39>'&Ver2:TarraContainer&'<39>'&|
        ', <39>'&Ver2:Laadhaven&'<39>'&|
        ', <39>'&Ver2:Loshaven&'<39>'&|
        ', <39>'&Ver2:Boekingsnr&'<39>'&|
        ', <39>'&Ver2:BESCWaiver&'<39>'&|
        ', '&Ver2:ExpresseRelease&|
        ', <39>'&Ver2:Aan&'<39>'&|
        ', <39>'&Ver2:OmschrijvingGoederen&'<39>'&|
        ')'
    SetClipBoard(Loc:SQLCommando)
    Verkoop{Prop:SQL}=Loc:SQLCommando
   !Access:Partij.Insert()
!Add(Partij)
    IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).

    Verkoop{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Verkoop OFF'
    IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).

    RETURN

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LocalClass.RestorePlanning    PROCEDURE(_RecordInhoudPre)
Code
    Planning{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Planning ON'
    IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).
    Clear(Par:Record)

    St.SetValue(_RecordInhoudPre)
    st.split('<13,10>')
    loop i# = 1 to st.Records()
        Str.SetValue(St.GetLine(i#))      ! PAR:PARTIJID=30292            ,  5-12-1883            ,  0:05            , 3
        Str.Split(',')
        stVeld.SetValue(Str.GetLine(1))    ! PAR:PARTIJID=30292
        stVeld.After('=')
    !SETCLIPBOARD(stVeld.Before('=')&'|'&stVeld.After('='))             !PAR:PARTIJID|30292
        Case stVeld.Before('=')
        OF 'PlanningID | READONLY'
            Pla:PlanningID=stVeld.After('=')
        OF 'PLA:VERKOOPID'
            PLA:VERKOOPID=stVeld.After('=')
        OF 'PLA:INKOOPID'
            PLA:INKOOPID=stVeld.After('=')
        OF 'PLA:ARTIKELID'
            PLA:ARTIKELID=stVeld.After('=')
        OF 'PLA:KG'
            PLA:KG=stVeld.After('=')
        OF  'PLA:PALLETS'
            PLA:PALLETS=stVeld.After('=')
        OF 'PLA:PLANNING_DATE'
            PLA:PLANNING_DATE=stVeld.After('=')
        OF 'PLA:PLANNING_TIME'
            PLA:PLANNING_TIME=stVeld.After('=')
        of 'PLA:VERPAKKINGID'
            PLA:VERPAKKINGID=stVeld.After('=')
        of 'PLA:CELID'
            PLA:CELID=stVeld.After('=')
        of 'PLA:PARTIJID'
            PLA:PARTIJID=stVeld.After('=')
        of 'PLA:MEMO'
            PLA:MEMO=stVeld.After('=')
        of 'PLA:MUTATIEGEMAAKT'
            PLA:MUTATIEGEMAAKT=stVeld.After('=')
        of 'PLA:GEPRINT'
            PLA:GEPRINT=stVeld.After('=')
        of 'PLA:VERWERKT'
            PLA:VERWERKT=stVeld.After('=')
        of 'PLA:LEVERANCIER'
            PLA:LEVERANCIER=stVeld.After('=')
        of 'PLA:OVERBOEKINGCELID'
            PLA:OVERBOEKINGCELID=stVeld.After('=')
        of 'PLA:INSTRUCTIE'
            PLA:INSTRUCTIE=stVeld.After('=')
        of 'PLA:TRANSPORT'
            PLA:TRANSPORT=stVeld.After('=')
        of 'PLA:GEWOGEN'
            PLA:GEWOGEN=stVeld.After('=')
        of 'PLA:CELLOCATIEID'
            PLA:CELLOCATIEID=stVeld.After('=')
        of 'PLA:MUTATIEKG'
            PLA:MUTATIEKG=stVeld.After('=')
        of 'PLA:MUTATIEPALLETS'
            PLA:MUTATIEPALLETS=stVeld.After('=')
        of 'PLA:OVERBOEKINGPLANNINGID'
            PLA:OVERBOEKINGPLANNINGID=stVeld.After('=')
        of 'PLA:INKOOPKGPRIJS'
            PLA:INKOOPKGPRIJS=stVeld.After('=')
        of 'PLA:VERKOOPKGPRIJS'
            PLA:VERKOOPKGPRIJS=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADDUEDATE12'
            PLA:UITSLAGPALLETBLADDUEDATE12=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADDUEDATE12_DATE'
            PLA:UITSLAGPALLETBLADDUEDATE12_DATE=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADDUEDATE12_TIME'
            PLA:UITSLAGPALLETBLADDUEDATE12_TIME=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADPRODUCTIONDATE11_DATE'
            PLA:UITSLAGPALLETBLADPRODUCTIONDATE11_DATE=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADPRODUCTIONDATE11_TIME'
            PLA:UITSLAGPALLETBLADPRODUCTIONDATE11_TIME=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADSELLBYDATE15_DATE'
            PLA:UITSLAGPALLETBLADSELLBYDATE15_DATE=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADSELLBYDATE15_TIME'
            PLA:UITSLAGPALLETBLADSELLBYDATE15_TIME=stVeld.After('=')
        of 'PLA:ALTERNATIEVEARTIKELOMS'
            PLA:ALTERNATIEVEARTIKELOMS=stVeld.After('=')
        of 'PLA:VERPAKKINGKLASSEID'
            PLA:VERPAKKINGKLASSEID=stVeld.After('=')
        of 'PLA:AANTALVERPAKKINGEN'
            PLA:AANTALVERPAKKINGEN=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADORIGINLIVEBIRD'
            PLA:UITSLAGPALLETBLADORIGINLIVEBIRD=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADORIGINSLAUTHERHOUSE'
            PLA:UITSLAGPALLETBLADORIGINSLAUTHERHOUSE=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADORIGINPROCESSING'
            PLA:UITSLAGPALLETBLADORIGINPROCESSING=stVeld.After('=')
        of 'PLA:UITSLAGPALLETBLADORIGINPACKING'
            PLA:UITSLAGPALLETBLADORIGINPACKING=stVeld.After('=')
        of 'PLA:VALUTA'
            PLA:VALUTA=stVeld.After('=')
        of 'PLA:KOERSVERSCHIL'
            PLA:KOERSVERSCHIL=stVeld.After('=')
        of 'PLA:EXTRAKOSTEN'
            PLA:EXTRAKOSTEN=stVeld.After('=')
        of 'PLA:LOTID'
            PLA:LOTID=stVeld.After('=')
        of 'PLA:PLANTNUMBER'
            PLA:PLANTNUMBER=stVeld.After('=')
        of 'PLA:DELIVERYDATE_DATE'
            PLA:DELIVERYDATE_DATE=stVeld.After('=')
        of 'PLA:DELIVERYDATE_TIME'
            PLA:DELIVERYDATE_TIME=stVeld.After('=')
        of 'PLA:PLANNINGIDRETOUR'
            PLA:PLANNINGIDRETOUR=stVeld.After('=')
        of 'PLA:PLANNINGIDPARENT'
            PLA:PLANNINGIDPARENT=stVeld.After('=')
        of 'PLA:AANVULLING'
            PLA:AANVULLING=stVeld.After('=')
        of 'PLA:DOZEN'
            PLA:DOZEN=stVeld.After('=')
        of 'PLA:GROSSWEIGHT'
            PLA:GROSSWEIGHT=stVeld.After('=')
        of 'PLA:OVERBOEKSOORT'
            PLA:OVERBOEKSOORT=stVeld.After('=')
        of 'PLA:OverboekCelLocatieID'
            PLA:OverboekCelLocatieID=stVeld.After('=')
        of 'PLA:NieuwKg'
            PLA:NieuwKg=stVeld.After('=')
        of 'PLA:NieuwPallets'
            PLA:NieuwPallets=stVeld.After('=')
        END
    End
    Loc:SQLCommando= |
        'INSERT INTO [dbo].[Planning] ' & |
'           ([PlanningID] ' & |
'           ,[VerkoopID] ' & |
'           ,[InkoopID] ' & |
'           ,[ArtikelID] ' & |
'           ,[KG] ' & |
'           ,[Pallets] ' & |
'           ,[Planning] ' & |
'           ,[VerpakkingID] ' & |
'           ,[CelID] ' & |
'           ,[PartijID] ' & |
'           ,[Memo] ' & |
'           ,[MutatieGemaakt] ' & |
'           ,[Geprint] ' & |
'           ,[Verwerkt] ' & |
'           ,[Leverancier] ' & |
'           ,[OverboekingCelID] ' & |
'           ,[Instructie] ' & |
'           ,[Transport] ' & |
'           ,[Gewogen] ' & |
'           ,[CelLocatieID] ' & |
'           ,[MutatieKG] ' & |
'           ,[MutatiePallets] ' & |
'           ,[OverboekingPlanningID] ' & |
'           ,[InkoopKGPrijs] ' & |
'           ,[VerkoopKGPrijs] ' & |
'           ,[UitslagPalletbladDueDate12] ' & |
'           ,[UitslagPalletbladProductionDate11] ' & |
'           ,[UitslagPalletbladSellByDate15] ' & |
'           ,[AlternatieveArtikelOms] ' & |
'           ,[VerpakkingKlasseID] ' & |
'           ,[AantalVerpakkingen] ' & |
'           ,[UitslagPalletbladOriginLiveBird] ' & |
'           ,[UitslagPalletbladOriginSlautherHouse] ' & |
'           ,[UitslagPalletbladOriginProcessing] ' & |
'           ,[UitslagPalletbladOriginPacking] ' & |
'           ,[Valuta] ' & |
'           ,[Koersverschil] ' & |
'           ,[ExtraKosten] ' & |
'           ,[LotID] ' & |
'           ,[PlantNumber] ' & |
'           ,[DeliveryDate] ' & |
'           ,[PlanningIDRetour] ' & |
'           ,[PlanningIDParent] ' & |
'           ,[Aanvulling] ' & |
'           ,[Dozen] ' & |
'           ,[GrossWeight] ' & |
'           ,[OverboekSoort] ' & |
'           ,[OverboekCelLocatieID] ' & |
'           ,[NieuwKg] ' & |
'           ,[NieuwPallets]) ' & |
'     VALUES (' & |
        Pla:PlanningID&|
        ', '&Pla:VerkoopID &|
        ', '&Pla:InkoopID&|
        ', '&Pla:ArtikelID&|
        ', '&Pla:KG&|
        ', '&Pla:Pallets&|
        ', <39>'&CHOOSE(Pla:Planning_DATE=0,'1900-01-01',Format(Pla:Planning_DATE,@D010-))&' '&Format(Pla:Planning_TIME,@T01)&'<39>'&|
        ', '&Pla:VerpakkingID &|
        ', '&Pla:CelID&|
        ', '&Pla:PartijID&|
        ', <39>'&Pla:Memo&'<39>'&|
        ', '&Pla:MutatieGemaakt&|
        ', '&Pla:Geprint&|
        ', '&Pla:Verwerkt&|
        ', '&Pla:Leverancier&|
        ', '&Pla:OverboekingCelID&|
        ', <39>'&Pla:Instructie&'<39>'&|
        ', <39>'&Pla:Transport&'<39>'&|
        ', '&Pla:Gewogen&|
        ', '&Pla:CelLocatieID&|
        ', '&Pla:MutatieKG&|
        ', '&Pla:MutatiePallets&|
        ', '&Pla:OverboekingPlanningID&|
        ', '&Pla:InkoopKGPrijs&|
        ', '&Pla:VerkoopKGPrijs&|
        ', <39>'&CHOOSE(Pla:UitslagPalletbladDueDate12_DATE=0,'1900-01-01',Format(Pla:UitslagPalletbladDueDate12_DATE,@D010-))&' '&Format(Pla:UitslagPalletbladDueDate12_TIME,@T01)&'<39>'&|
        ', <39>'&CHOOSE(Pla:UitslagPalletbladProductionDate11_DATE=0,'1900-01-01',Format(Pla:UitslagPalletbladProductionDate11_DATE,@D010-))&' '&Format(Pla:UitslagPalletbladProductionDate11_TIME,@T01)&'<39>'&|
        ', <39>'&CHOOSE(Pla:UitslagPalletbladSellByDate15_DATE=0,'1900-01-01',Format(Pla:UitslagPalletbladSellByDate15_DATE,@D010-))&' '&Format(Pla:UitslagPalletbladSellByDate15_TIME,@T01)&'<39>'&|
        ', <39>'&Pla:AlternatieveArtikelOms&'<39>'&|
        ', '&Pla:VerpakkingKlasseID&|
        ', '&Pla:AantalVerpakkingen&|
        ', <39>'&Pla:UitslagPalletbladOriginLiveBird&'<39>'&|
        ', <39>'&Pla:UitslagPalletbladOriginSlautherHouse&'<39>'&|
        ', <39>'&Pla:UitslagPalletbladOriginProcessing&'<39>'&|
        ', <39>'&Pla:UitslagPalletbladOriginPacking&'<39>'&|
        ', <39>'&Pla:Valuta&'<39>'&|
        ', '&Pla:Koersverschil&|
        ', '&Pla:ExtraKosten&|
        ', '&Pla:LotID&|
        ', <39>'&Pla:PlantNumber&'<39>'&|
        ', <39>'&CHOOSE(Pla:DeliveryDate_DATE=0,'1900-01-01',Format(Pla:DeliveryDate_DATE,@D010-))&' '&Format(Pla:DeliveryDate_TIME,@T01)&'<39>'&|
        ', '&Pla:PlanningIDRetour&|
        ', '&Pla:PlanningIDParent&|
        ', <39>'&Pla:Aanvulling&'<39>'&|
        ', '&Pla:Dozen&|
        ', '&Pla:GrossWeight&|
        ', <39>'&Pla:OverboekSoort&'<39>'&|
        ', '&Pla:OverboekCelLocatieID&|
        ', '&Pla:NieuwKG&|
        ', '&Pla:NieuwPallets&|
        ')'
    SetClipBoard(Loc:SQLCommando)
    Planning{Prop:SQL}=Loc:SQLCommando
   !Access:Partij.Insert()
!Add(Partij)
    IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).

    Planning{Prop:SQL}= 'SET IDENTITY_INSERT dbo.Planning OFF'
    IF ERROR() THEN STOP('Error '&ERROR()&'|'&FILEERROR()).
    Return

[END]
[END]
[ADDITION]
NAME StringTheory StringTheoryLocal
[INSTANCE]
INSTANCE 4
[PROMPTS]
%NoStringTheory LONG  (0)
%StringTheoryObject DEFAULT  ('st')
%StringTheoryClassName DEFAULT  ('StringTheory')
[INSTANCE]
INSTANCE 5
[PROMPTS]
%NoStringTheory LONG  (0)
%StringTheoryObject DEFAULT  ('str')
%StringTheoryClassName DEFAULT  ('StringTheory')
[INSTANCE]
INSTANCE 6
[PROMPTS]
%NoStringTheory LONG  (0)
%StringTheoryObject DEFAULT  ('stVeld')
%StringTheoryClassName DEFAULT  ('StringTheory')
[ADDITION]
NAME WinEvent WinEvent
[INSTANCE]
INSTANCE 2
OWNER 4
[PROMPTS]
%DisableWinEvent LONG  (0)
%CheckForCantCloseNowSetHere LONG  (1)
%AutoDown LONG  (0)
%NoAutoDown LONG  (0)
%LocWindowsVisible DEFAULT  ('0')
%WindowsVisibleAfterOpen LONG  (1)
%AlertWinEventDebug LONG  (0)
%DisplayCompileDate LONG  (0)
%DisplayCompileDateFormat DEFAULT  ('@D6')
%locNoHandleCloseDown LONG  (0)
%locCloseDownWhenWindowCloses LONG  (1)
%locCloseDownWhenWindowClosesCtrl DEFAULT  ('')
%WinAlert MULTI LONG  ()
%Mess DEPEND %WinAlert DEFAULT TIMES 0

%Act1 DEPEND %WinAlert DEFAULT TIMES 0

%act2 DEPEND %WinAlert DEFAULT TIMES 0

%locCloseDownWhenWindowClosesSet LONG  (1)
%SortListbox MULTI LONG  ()
%ThisListbox DEPEND %SortListbox DEFAULT TIMES 0

%ThisListboxHeader DEPEND %SortListbox MULTI DEFAULT TIMES 0

%gloWinEventTesting LONG  (0)
%gloWinEventTestingColor1 LONG  (15728618)
%gloWinEventTestingColor2 LONG  (16777215)
[ADDITION]
NAME NetTalk Local_Use_NetRefresh
[INSTANCE]
INSTANCE 1
OWNER 2
[PROMPTS]
%NoNetRefreshHere LONG  (0)
%NetRefreshFrame LONG  (0)
%SendRefreshAtOK DEFAULT  ('Use Global Default')
%RefreshAnyway LONG  (0)
%DependOnAll LONG  (1)
%DependFiles MULTI LONG  ()
%DependFile DEPEND %DependFiles FILE TIMES 0

%DependFileHC DEPEND %DependFiles DEFAULT TIMES 0

%SendRefreshPrimary LONG  (1)
%RefreshFiles MULTI LONG  ()
%RefreshFile DEPEND %RefreshFiles FILE TIMES 0

[ADDITION]
NAME ABC PauseButton
[INSTANCE]
INSTANCE 3
[PROMPTS]
%PauseText DEFAULT  ('Pause')
%RestartText DEFAULT  ('Restart')
%DeferOpen LONG  (1)
%StartText DEFAULT  ('Start')
%MultiStart LONG  (0)
[WINDOW]
ProgressWindow WINDOW('Process GebruikerLog'),AT(,,142,76),FONT('Microsoft Sans Serif',8,, |
          FONT:regular,CHARSET:DEFAULT),DOUBLE,CENTER,GRAY,TIMER(1)
          PROGRESS,AT(15,15,111,12),USE(Progress:Thermometer),RANGE(0,100),#ORIG(Progress:Thermometer), |
            #ORDINAL(1)
          STRING(''),AT(0,3,141,10),USE(?Progress:UserString),CENTER,#ORIG(?Progress:UserString), |
            #ORDINAL(2)
          STRING(''),AT(0,30,141,10),USE(?Progress:PctText),CENTER,#ORIG(?Progress:PctText), |
            #ORDINAL(3)
          BUTTON('Pause'),AT(15,57,53,15),USE(?Pause),LEFT,ICON('WAOK.ico'),DEFAULT,FLAT,#ORIG(?Pause), |
            #SEQ(3),#ORDINAL(4)
          BUTTON('Cancel'),AT(76,57,49,15),USE(?Progress:Cancel),LEFT,ICON('WACANCEL.ICO'), |
            FLAT,MSG('Cancel Process'),TIP('Cancel Process'),#ORIG(?Progress:Cancel),#ORDINAL(5)
        END

[END]
